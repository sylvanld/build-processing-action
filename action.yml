name: 'Build processing action'
description: 'Action to build processing sketch and host artifact under GitHub release'  

inputs:
  sketch:
    description: 'Name of the sketch to export'
    required: true
  
  processing_version:
    description: 'Processing language version used to built sketches'
    required: false
    default: 3.5.4
  
  target_platform:
    description: 'Targeted platform'
    required: true
    default: linux64

outputs:
  artifact_path: 
    description: "Path to zip file containing distribuable build for given platform."
    value: ./artifacts/${{ inputs.sketch }}-${{ inputs.target_platform }}.zip

runs:
  using: "composite"
  steps:
    - run: |
        echo Install processing version ${{ inputs.processing_version }}.
        wget -q https://download.processing.org/processing-${{ inputs.processing_version }}-linux64.tgz
        tar -xzf processing-${{ inputs.processing_version }}-linux64.tgz
        rm processing-${{ inputs.processing_version }}-linux64.tgz
        echo "Processing ${{ inputs.processing_version }} installed successfully!"
        processing-${{ inputs.processing_version }}/processing-java --help
      shell: bash

    - run: |
        echo Build and compress distribuable in-place.
        echo ${PWD}/processing-${{ inputs.processing_version }}/processing-java --sketch=${PWD}/${{ inputs.sketch }}/ --export
        processing-${{ inputs.processing_version }}/processing-java --sketch=${{ inputs.sketch }}/ --output=/tmp/${{ inputs.sketch }}/ --force --platform=${{ inputs.target_platform }} --export
        echo built files
        ls /tmp/${{ inputs.sketch }}/
      shell: bash

    - run: |
        echo Compress distribuable for platform ${{ inputs.sketch }}.
        mkdir -p ./artifacts
        cd /tmp/
        zip -qr /tmp/${{ inputs.sketch }}.zip ${{ inputs.sketch }}/* && echo Successfully zipped ${{ inputs.target_platform }} distribuable.
        cd -
        mv /tmp/${{ inputs.sketch }}.zip ./artifacts/${{ inputs.sketch }}-${{ inputs.target_platform }}.zip
      shell: bash
